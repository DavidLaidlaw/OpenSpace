local assetHelper = asset.require('util/asset_helper')
local sceneHelper = asset.require('util/scene_helper')

-- Specifying which other assets should be loaded in this scene
asset.require('spice/base')

assetHelper.requestAll(asset, 'scene/solarsystem/sun')
-- assetHelper.requestAll(asset, 'scene/solarsystem/planets')
local earthAsset = asset.require('scene/solarsystem/planets/earth/earth')
asset.require('scene/solarsystem/planets/earth/moon/moon')

-- Add everything from DU except the old stars
asset.request('scene/digitaluniverse/2dF')
asset.request('scene/digitaluniverse/2mass')
asset.request('scene/digitaluniverse/6dF')
asset.request('scene/digitaluniverse/abell')
asset.request('scene/digitaluniverse/alternatestarlabels')
asset.request('scene/digitaluniverse/backgroundradiation')
asset.request('scene/digitaluniverse/clusters')
asset.request('scene/digitaluniverse/constellationbounds')
asset.request('scene/digitaluniverse/constellations')
asset.request('scene/digitaluniverse/dwarfs')
asset.request('scene/digitaluniverse/exoplanets')
asset.request('scene/digitaluniverse/globularclusters')
asset.request('scene/digitaluniverse/grids')
asset.request('scene/digitaluniverse/groups')
asset.request('scene/digitaluniverse/h2regions')
asset.request('scene/digitaluniverse/kepler')
asset.request('scene/digitaluniverse/localdwarfs')
asset.request('scene/digitaluniverse/milkyway')
asset.request('scene/digitaluniverse/obassociations')
asset.request('scene/digitaluniverse/openclusters')
asset.request('scene/digitaluniverse/planetarynebulae')
asset.request('scene/digitaluniverse/pulsars')
asset.request('scene/digitaluniverse/quasars')
asset.request('scene/digitaluniverse/sdss')
asset.request('scene/digitaluniverse/starlabels')
asset.request('scene/digitaluniverse/stars')
asset.request('scene/digitaluniverse/superclusters')
asset.request('scene/digitaluniverse/supernovaremnants')
asset.request('scene/digitaluniverse/tully')
asset.request('scene/digitaluniverse/voids')

asset.request('scene/milkyway/gaia/gaiamission')
asset.request('scene/milkyway/gaia/abundance')
asset.request('scene/milkyway/gaia/exoplanets_hypatia')

-- Load default key bindings applicable to most scenes
asset.require('util/default_keybindings')
asset.require('util/default_dashboard')

-- Custom Keybindings
local Keybindings = {
    {
        Key = "g",
        Command = "openspace.setPropertyValue('NavigationHandler.Origin', 'GaiaModel')",
        Documentation = "Sets the focus of the camera to the 'GaiaModel'.",
        Local = false
    },
    {
        Key = "e",
        Command = "openspace.setPropertyValue('NavigationHandler.Origin', 'Earth')",
        Documentation = "Sets the focus of the camera to 'Earth'.",
        Local = false
    },
    {
        Key = "b",
        Command = "openspace.setPropertyValueSingle('Scene.GaiaMission.renderable.File', [[F:/Gaia/DR2_full_Octree[75kSPN,800dist]_5p/]]);",
        Documentation = "Switch to the 900M dataset.",
        Local = false
    },
    {
        Key = "r",
        Command = "openspace.setPropertyValueSingle('Scene.GaiaMission.renderable.File', [[F:/Gaia/DR2_rv_Octree[10kSPN,20dist]_5p/]]);",
        Documentation = "Switch to the 7.2M Radial Velocity datset.",
        Local = false
    }
}

local GaiaModelAsset = asset.require('scene/milkyway/gaia/gaiamodel')
asset.require('scene/milkyway/gaia/trail')

assetHelper.registerDashboardItems(asset, {
    {
        Type = "DashboardItemDistance",
        Identifier = "GaiaModelEarthDistance",
        GuiName = "GaiaModel Earth Distance",
        SourceType = "Node",
        SourceNodeName = "GaiaModel",
        DestinationType = "Node Surface",
        DestinationNodeName = "Earth"
    }
})

asset.onInitialize(function ()
    openspace.time.setTime(openspace.time.currentWallTime())
    sceneHelper.bindKeys(Keybindings)

    -- openspace.setPropertyValueSingle('NavigationHandler.OrbitalNavigator.MouseSensitivity', 40.0);
    
    openspace.setDefaultGuiSorting()

    openspace.markInterestingNodes({
       "GaiaModel", "Earth", "Sun"
    })

    openspace.addVirtualProperty(
        "BoolProperty",
        "Show Trails",
        "*Trail.renderable.Enabled",
        "Disable or enable all trails of the scene at the same time",
        true,
        nil,
        nil
    )

    --openspace.navigation.setCameraState({
    --    Focus = GaiaModelAsset.GaiaModel.Identifier,
    --    Position = { 1000000000000.0, 1000000000000.0, 1000000000000.0 },
    --    Rotation = { 0.683224, -0.765934, -0.601234, -0.418073 },
    --})
    openspace.navigation.setCameraState({
        Focus = earthAsset.Earth.Identifier,
        Position = { 100000000.0, 100000000.0, 100000000.0 },
        Rotation = { 0.758797, 0.221490, -0.605693, -0.091135 },
    })


    -- For the AMNH Gaia Sprint event
    openspace.setPropertyValueSingle('RenderEngine.ShowLog', false);
    openspace.setPropertyValueSingle('Scene.OpenStarClusters.renderable.Transparency', 0.3);
    openspace.setPropertyValueSingle('Scene.OpenStarClusters.renderable.ScaleFactor', 400.0);
    openspace.setPropertyValueSingle('Scene.OpenStarClusters.renderable.TextSize', 15.5);
    openspace.setPropertyValueSingle('Scene.GlobularClusters.renderable.ScaleFactor', 400.0);
    openspace.setPropertyValueSingle('Scene.GlobularClusters.renderable.Transparency', 0.45);
    openspace.setPropertyValueSingle('Scene.GlobularClusters.renderable.TextSize', 16.5);
    openspace.setPropertyValueSingle('Scene.GlobularClusters.renderable.BillboardMaxSize', 530.0);
    openspace.setPropertyValueSingle('Scene.OBAssociations.renderable.ScaleFactor', 400.0);

    openspace.setPropertyValueSingle('Scene.Stars.renderable.UsePSFTexture', false);

    openspace.setPropertyValueSingle('Scene.Stars_Apogee.renderable.UsePSFTexture', false);
    openspace.setPropertyValueSingle('Scene.Stars_Apogee.renderable.OtherDataColorMap', [[F:/Gaia/GaiaAbundApogee/RainbowGradient.cmap]]);
    openspace.setPropertyValueSingle('Scene.Stars_Apogee.renderable.ColorOption', 3);
    openspace.setPropertyValueSingle('Scene.Stars_Apogee.renderable.ScaleFactor', 8.0);
    openspace.setPropertyValueSingle('Scene.Stars_Apogee.renderable.OtherDataValueRange', {-0.5,0.5});

    openspace.setPropertyValueSingle('Scene.Stars_Galah.renderable.UsePSFTexture', false);
    openspace.setPropertyValueSingle('Scene.Stars_Galah.renderable.OtherDataColorMap', [[F:/Gaia/GaiaAbundGalah/RainbowGradient.cmap]]);
    openspace.setPropertyValueSingle('Scene.Stars_Galah.renderable.ColorOption', 3);
    openspace.setPropertyValueSingle('Scene.Stars_Galah.renderable.ScaleFactor', 12.0);
    openspace.setPropertyValueSingle('Scene.Stars_Galah.renderable.OtherDataValueRange', {-0.5,0.5});


    openspace.setPropertyValueSingle('Scene.Stars_Hypatia.renderable.UsePSFTexture', false);
    openspace.setPropertyValueSingle('Scene.Stars_Hypatia.renderable.OtherDataColorMap', [[F:/Gaia/GaiaHypatia/RainbowGradient.cmap]]);
    openspace.setPropertyValueSingle('Scene.Stars_Hypatia.renderable.ColorOption', 3);
    openspace.setPropertyValueSingle('Scene.Stars_Hypatia.renderable.ScaleFactor', 6.0);
    openspace.setPropertyValueSingle('Scene.Stars_Hypatia.renderable.OtherDataValueRange', {-0.5,0.5});
end)

-- Remove interesting nodes and added virtual properties
asset.onDeinitialize(function ()
    sceneHelper.unbindKeys(Keybindings)

    openspace.removeVirtualProperty("*Trail.renderable.Enabled")
    openspace.removeInterestingNodes({
        "GaiaModel", "Earth", "Sun"
    })
end)
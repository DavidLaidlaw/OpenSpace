local assetHelper = asset.require("util/asset_helper")

local textures = asset.syncedResource({
    Name = "Stars Textures",
    Type = "HttpSynchronization",
    Identifier = "stars_textures",
    Version = 1
})

local colorLUT = asset.syncedResource({
    Name = "Stars Color Table",
    Type = "HttpSynchronization",
    Identifier = "stars_colormap",
    Version = 1
})

local stars = asset.syncedResource({
    Name = "Gaia Stars Data File",
    Type = "HttpSynchronization",
    Identifier = "gaia_stars",
    Version = 1
})

local GaiaMission = {
    Identifier = "GaiaMission",
    Renderable = {
        Type = "RenderableGaiaStars",
        File = stars .. "/DR1_full_octree_50kSPN/" -- "/TGAS_Octree_10kSPN.bin",
        FileReaderOption = "StreamOctree", -- "BinaryOctree",
        RenderOption = "Static",
        ShaderOption = "Point_SSBO",
        Texture = textures .. "/halo.png",
        ColorMap = colorLUT .. "/colorbv.cmap",
        LuminosityMultiplier = 1200,
        MagnitudeBoost = 25,
        CutOffThreshold = 38,
        BillboardSize = 10,
        CloseUpBoostDist = 300,
        Sharpness = 1.45,
        ColumnNames = {
            "Gaia_Parallax_Err",
            "Gaia_Proper_Motion_RA",
            "Gaia_Proper_Motion_RA_Err",
            "Gaia_Proper_Motion_Dec",
            "Gaia_Proper_Motion_Dec_Err",
            "Tycho_B_Mag_Err",
            "Tycho_V_Mag_Err",
        }
    },
    GUI = {
        Name = "Gaia Mission",
        Path = "/GaiaMission"
    }
}

-- Prepared asset from Vienna's DR1_TGAS file (2.1M stars) if user want to compare the datasets.
local GaiaMissionFits = {
    Identifier = "GaiaMissionFits",
    Renderable = {
        Type = "RenderableGaiaStars",
        File = stars .. "/TGAS_Octree_10kSPN.bin",
        FileReaderOption = "BinaryOctree",
        ColumnOption = "Static",
        Texture = textures .. "/halo.png",
        ColorMap = colorLUT .. "/colorbv.cmap",
    },
    GUI = {
        Name = "Gaia Mission Fits",
        Path = "/GaiaMission"
    }
}

-- Prepared asset from AMNH (DR1 subset + HIP) if user want to compare the datasets.
local GaiaMissionSpeck = {
    Identifier = "GaiaMissionSpeck",
    Renderable = {
        Type = "RenderableGaiaStars",
        File = stars .. "/AMNH_DR1_Octree_10kSPN.bin",
        FileReaderOption = "BinaryOctree",
        ColumnOption = "Static",
        Texture = textures .. "/halo.png",
        ColorMap = colorLUT .. "/colorbv.cmap",
    },
    GUI = {
        Name = "Gaia Mission Speck",
        Path = "/GaiaMission"
    }
}

assetHelper.registerSceneGraphNodesAndExport(asset, { GaiaMission })
